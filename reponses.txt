Prénom:Hao Nom:LIU Groupe 1

Réponses aux question de la partie UML : 

1- A quoi sert la classe AbstractRunChat ?

Pour géniraliser des membres communs aux sous classes (ici ce sont RunChatServer et RunChatClient) sans connaître encore le détail de l'implémentation

2- Expliquez la relation ChatServer / InputOutputClient concrétisée par l’attribut « clients ».

La classe InputOutoutCLient est composée dans la classe CharServer pour qu'elle ait l'attribut clients et puisse traiter les IO opérations

3- Expliquez la relation ClientHandler / InputClient concrétisée par l’attribut « mainClient ».

La classe InputCLient agrége dans la classe ClientHandler, c'est pour que ClientHandler puisse lire les InputStream de clients

4- Expliquez la relation ClientHandler / InputOutputClient concrétisée par l’attribut « allClients ».

La classe InputOutputClient agérge dans la classe ClientHandle, ClientHandle peut rediffuser les messages aux autres clients

5- Combien de threads tournent sur un serveur dans le scénario présenté par la Figure 1 (page 1) ? 
  Détaillez votre réponse en précisant qui lance qui.

3 threads tournent sur le serveur,dans l'ordre c'est ChatServer, ChatClient1, ChatClient2

6- Combien de threads tournent dans le Client 1 du scénario présenté par la Figure 1 (page 1) ?
  Détaillez votre réponse en précisant qui lance qui.

1 thread, que elle même

7- A quoi sert le threads[i].join() à la fin du run de ChatClient ?

Ça sert à trouver client l'un et l'autre par le server. Pour qu'il ne se pas trompe de rediffuser des messages

8- Que représente la classe ChatClient dans le cadre d’une architecture MVC ?

La classe ChatClient est agéré de UserHandle et ServerHandle. Pour l'architecture MVC, ici on sépare le model dans la classe ChatClient et le controle c'est ServerHandle, et la vue, c'est UserHandle. 

